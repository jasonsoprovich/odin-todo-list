{"version":3,"file":"bundle.bf757bee37907579fb8d.js","mappings":"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","sources":["webpack://webpack-starter/webpack/runtime/chunk loaded","webpack://webpack-starter/./src/pubsub.js","webpack://webpack-starter/./node_modules/date-fns/constants.js","webpack://webpack-starter/./node_modules/date-fns/constructFrom.js","webpack://webpack-starter/./node_modules/date-fns/toDate.js","webpack://webpack-starter/./node_modules/date-fns/parseISO.js","webpack://webpack-starter/./node_modules/date-fns/isValid.js","webpack://webpack-starter/./node_modules/date-fns/isDate.js","webpack://webpack-starter/./src/logger.js","webpack://webpack-starter/./src/taskManager.js","webpack://webpack-starter/./node_modules/date-fns/compareAsc.js","webpack://webpack-starter/./node_modules/date-fns/compareDesc.js","webpack://webpack-starter/./src/project.js","webpack://webpack-starter/./src/projectManager.js","webpack://webpack-starter/./node_modules/date-fns/_lib/normalizeDates.js","webpack://webpack-starter/./node_modules/date-fns/startOfDay.js","webpack://webpack-starter/./node_modules/date-fns/isToday.js","webpack://webpack-starter/./node_modules/date-fns/isSameDay.js","webpack://webpack-starter/./node_modules/date-fns/constructNow.js","webpack://webpack-starter/./node_modules/date-fns/isPast.js","webpack://webpack-starter/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://webpack-starter/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://webpack-starter/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://webpack-starter/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://webpack-starter/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://webpack-starter/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://webpack-starter/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://webpack-starter/./node_modules/date-fns/locale/en-US.js","webpack://webpack-starter/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://webpack-starter/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://webpack-starter/./node_modules/date-fns/_lib/defaultOptions.js","webpack://webpack-starter/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://webpack-starter/./node_modules/date-fns/getDayOfYear.js","webpack://webpack-starter/./node_modules/date-fns/differenceInCalendarDays.js","webpack://webpack-starter/./node_modules/date-fns/startOfYear.js","webpack://webpack-starter/./node_modules/date-fns/startOfWeek.js","webpack://webpack-starter/./node_modules/date-fns/startOfISOWeek.js","webpack://webpack-starter/./node_modules/date-fns/getISOWeekYear.js","webpack://webpack-starter/./node_modules/date-fns/getISOWeek.js","webpack://webpack-starter/./node_modules/date-fns/startOfISOWeekYear.js","webpack://webpack-starter/./node_modules/date-fns/getWeekYear.js","webpack://webpack-starter/./node_modules/date-fns/getWeek.js","webpack://webpack-starter/./node_modules/date-fns/startOfWeekYear.js","webpack://webpack-starter/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://webpack-starter/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://webpack-starter/./node_modules/date-fns/_lib/format/formatters.js","webpack://webpack-starter/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://webpack-starter/./node_modules/date-fns/_lib/protectedTokens.js","webpack://webpack-starter/./node_modules/date-fns/format.js","webpack://webpack-starter/./src/renderer.js","webpack://webpack-starter/./node_modules/date-fns/isFuture.js","webpack://webpack-starter/./src/confirmationDialog.js","webpack://webpack-starter/./src/index.js","webpack://webpack-starter/webpack/bootstrap","webpack://webpack-starter/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-starter/webpack/runtime/jsonp chunk loading","webpack://webpack-starter/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","class PubSub {\n  #events = {};\n\n  on(eventName, fn) {\n    this.#events[eventName] = this.#events[eventName] || [];\n    this.#events[eventName].push(fn);\n  }\n\n  off(eventName, fn) {\n    if (this.#events[eventName]) {\n      for (let i = 0; i < this.#events[eventName].length; i += 1) {\n        if (this.#events[eventName][i] === fn) {\n          this.#events[eventName].splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  emit(eventName, data) {\n    if (this.#events[eventName]) {\n      this.#events[eventName].forEach((fn) => {\n        fn(data);\n      });\n    }\n  }\n\n  get list() {\n    return this.#events;\n  }\n}\n\nconst Events = new PubSub();\nexport default Events;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","export function debugLog(message, obj = '') {\n  console.log(message, obj);\n}\n\nexport function debugWarn(message, obj = '') {\n  console.warn(message, obj);\n}\n\nexport function debugError(message, obj = '') {\n  console.error(message, obj);\n}\n","import {\n  parseISO,\n  compareAsc,\n  compareDesc,\n  isValid as isValidDate,\n} from 'date-fns';\nimport Events from './pubsub';\nimport { debugLog, debugWarn, debugError } from './logger';\n\nconst TASKS_STORAGE_KEY = 'todoTasks';\nconst SORT_CRITERIA_KEY = 'todoSortCriteria';\n\nclass TaskManager {\n  #tasks = [];\n\n  #nextId = 1;\n\n  #currentSortCriteria = { field: 'text', direction: 'asc' };\n\n  constructor() {\n    this.#loadSortCriteria();\n    this.#loadTasks();\n  }\n\n  #loadSortCriteria() {\n    const storedCriteria = localStorage.getItem(SORT_CRITERIA_KEY);\n    if (storedCriteria) {\n      try {\n        this.#currentSortCriteria = JSON.parse(storedCriteria);\n      } catch (e) {\n        debugError('Error loading sort criteria from localStorage:', e);\n        this.#currentSortCriteria = { field: 'text', direction: 'asc' };\n      }\n    }\n  }\n\n  #saveSortCriteria() {\n    localStorage.setItem(\n      SORT_CRITERIA_KEY,\n      JSON.stringify(this.#currentSortCriteria)\n    );\n  }\n\n  #loadTasks() {\n    const storedTasks = localStorage.getItem(TASKS_STORAGE_KEY);\n    if (storedTasks) {\n      try {\n        this.#tasks = JSON.parse(storedTasks);\n        this.#nextId =\n          this.#tasks.reduce((max, task) => Math.max(max, task.id || 0), 0) + 1;\n      } catch (error) {\n        debugError('Error loading tasks from localStorage:', error);\n        this.#tasks = [];\n        this.#nextId = 1;\n      }\n    }\n    Events.emit('tasksUpdated', this.list);\n  }\n\n  #saveTasks() {\n    localStorage.setItem(TASKS_STORAGE_KEY, JSON.stringify(this.#tasks));\n    Events.emit('tasksUpdated', this.list);\n  }\n\n  createTask(\n    text,\n    due = null,\n    category = 'Inbox',\n    priority = null,\n    note = '',\n    subtasks = [],\n    done = false\n  ) {\n    const newTask = {\n      id: (this.#nextId += 1),\n      text,\n      due,\n      category,\n      priority,\n      note,\n      subtasks,\n      done,\n      createdAt: new Date().toISOString(),\n    };\n    this.#tasks.push(newTask);\n    this.#saveTasks();\n    return newTask;\n  }\n\n  setSortCriteria(field) {\n    if (this.#currentSortCriteria.field === field) {\n      this.#currentSortCriteria.direction =\n        this.#currentSortCriteria.direction === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.#currentSortCriteria.field = field;\n      this.#currentSortCriteria.direction =\n        field === 'priority' ? 'desc' : 'asc';\n    }\n    this.#saveSortCriteria();\n    Events.emit('sortCriteriaChanged', this.#currentSortCriteria);\n    Events.emit('tasksUpdated', this.list);\n  }\n\n  getCurrentSortCriteria() {\n    return { ...this.#currentSortCriteria };\n  }\n\n  get list() {\n    const sortedTasks = [...this.#tasks];\n\n    if (this.#currentSortCriteria.field) {\n      const { field, direction } = this.#currentSortCriteria;\n      const priorityOrder = {\n        High: 3,\n        Medium: 2,\n        Low: 1,\n        null: 0,\n        undefined: 0,\n        '': 0,\n      };\n\n      sortedTasks.sort((a, b) => {\n        let valA = a[field];\n        let valB = b[field];\n\n        if (field !== 'priority') {\n          const aIsNull = valA === null || valA === undefined || valA === '';\n          const bIsNull = valB === null || valB === undefined || valB === '';\n\n          if (aIsNull && bIsNull) return 0;\n          if (aIsNull) return direction === 'asc' ? 1 : -1;\n          if (bIsNull) return direction === 'asc' ? -1 : 1;\n        }\n\n        if (field === 'due') {\n          try {\n            const dateA =\n              typeof valA === 'string' && valA ? parseISO(valA) : null;\n            const dateB =\n              typeof valB === 'string' && valB ? parseISO(valB) : null;\n\n            const aIsValid = dateA && isValidDate(dateA);\n            const bIsValid = dateB && isValidDate(dateB);\n\n            if (!aIsValid && !bIsValid) return 0;\n            if (!aIsValid) return direction === 'asc' ? 1 : -1;\n            if (!bIsValid) return direction === 'asc' ? -1 : 1;\n\n            return direction === 'asc'\n              ? compareAsc(dateA, dateB)\n              : compareDesc(dateA, dateB);\n          } catch (error) {\n            debugError('Error comparing dates:', error, valA, valB);\n            return 0;\n          }\n        } else if (field === 'priority') {\n          const priorityA = priorityOrder[valA] || 0;\n          const priorityB = priorityOrder[valB] || 0;\n\n          if (priorityA === priorityB) return 0;\n          return direction === 'asc'\n            ? priorityA - priorityB\n            : priorityB - priorityA;\n        } else if (field === 'text') {\n          valA = String(valA ?? '').toLowerCase();\n          valB = String(valB ?? '').toLowerCase();\n          if (valA < valB) return direction === 'asc' ? -1 : 1;\n          if (valA > valB) return direction === 'asc' ? 1 : -1;\n          return 0;\n        }\n        return 0;\n      });\n    }\n    return sortedTasks;\n  }\n\n  findTaskById(id) {\n    return this.#tasks.find((task) => task.id === id);\n  }\n\n  updateTask(id, updates) {\n    const taskIndex = this.#tasks.findIndex((task) => task.id === id);\n    if (taskIndex > -1) {\n      this.#tasks[taskIndex] = { ...this.#tasks[taskIndex], ...updates };\n      this.#saveTasks();\n      return this.#tasks[taskIndex];\n    }\n    debugWarn(`Task with ID ${id} not found for update.`);\n    return null;\n  }\n\n  addSubtask(taskId, subtaskText) {\n    const task = this.findTaskById(taskId);\n    if (task) {\n      if (!Array.isArray(task.subtasks)) {\n        task.subtasks = [];\n      }\n      const newSubtask = {\n        id: Date.now() + Math.random().toString(36).substring(2, 7),\n        text: subtaskText,\n        done: false,\n      };\n      task.subtasks.push(newSubtask);\n      debugLog('Subtask added in TaskManager:', newSubtask, 'to task:', task);\n      this.#saveTasks();\n    } else {\n      debugError(`Task with ID ${taskId} not found. Cannot add subtask.`);\n    }\n  }\n\n  toggleSubtask(taskId, subtaskId) {\n    const task = this.findTaskById(taskId);\n    if (task && Array.isArray(task.subtasks)) {\n      const subtask = task.subtasks.find((st) => st.id === subtaskId);\n      if (subtask) {\n        subtask.done = !subtask.done;\n        this.#saveTasks();\n      }\n    }\n  }\n\n  deleteSubtask(taskId, subtaskId) {\n    const task = this.findTaskById(taskId);\n    if (task && Array.isArray(task.subtasks)) {\n      task.subtasks = task.subtasks.filter((st) => st.id !== subtaskId);\n      this.#saveTasks();\n    }\n  }\n\n  deleteTasksByCategory(categoryName) {\n    const before = this.#tasks.length;\n    this.#tasks = this.#tasks.filter((t) => t.category !== categoryName);\n    if (this.#tasks.length !== before) {\n      this.#saveTasks();\n    }\n  }\n\n  deleteTask(taskId) {\n    const idx = this.#tasks.findIndex((t) => t.id === taskId);\n    if (idx > -1) {\n      this.#tasks.splice(idx, 1);\n      this.#saveTasks();\n    } else {\n      debugWarn(`deleteTask: no task found with id ${taskId}`);\n    }\n  }\n}\n\nconst tasksManager = new TaskManager();\nexport default tasksManager;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nexport function compareDesc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff > 0) return -1;\n  else if (diff < 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareDesc;\n","class Project {\n  constructor(name) {\n    this.name = name;\n  }\n}\n\nexport default Project;\n","import Events from './pubsub';\nimport Project from './project';\nimport tasksManager from './taskManager';\nimport { debugLog, debugError } from './logger';\n\nconst PROJECTS_STORAGE_KEY = 'todos-app-projects';\nconst DEFAULT_PROJECTS = ['All', 'Inbox', 'Today', 'Upcoming', 'Overdue'];\nconst [defaultInboxProjectName] = DEFAULT_PROJECTS;\n\nclass ProjectManager {\n  #projects = [];\n\n  #currentProjectName = defaultInboxProjectName;\n\n  constructor() {\n    this.#loadProjects();\n    Project.prototype._projectManager = this;\n  }\n\n  #loadProjects() {\n    const storedProjects = localStorage.getItem(PROJECTS_STORAGE_KEY);\n    if (storedProjects) {\n      try {\n        const parsedProjectNames = JSON.parse(storedProjects);\n        const uniqueProjectNames = [\n          ...DEFAULT_PROJECTS,\n          ...parsedProjectNames.filter(\n            (name) => !DEFAULT_PROJECTS.includes(name)\n          ),\n        ];\n        this.#projects = uniqueProjectNames.map((name) => new Project(name));\n      } catch (error) {\n        debugError('Error loading projects from localStorage:', error);\n        this.#projects = DEFAULT_PROJECTS.map((name) => new Project(name));\n      }\n    } else {\n      this.#projects = DEFAULT_PROJECTS.map((name) => new Project(name));\n    }\n\n    if (!this.#projects.some((p) => p.name === this.#currentProjectName)) {\n      this.#currentProjectName = defaultInboxProjectName;\n    }\n\n    Events.emit('projectsUpdated', {\n      projects: this.list,\n      current: this.#currentProjectName,\n    });\n  }\n\n  #saveProjects() {\n    const projectNames = this.#projects.map((p) => p.name);\n    localStorage.setItem(PROJECTS_STORAGE_KEY, JSON.stringify(projectNames));\n    debugLog('➡️ emitting projectsUpdated', {\n      projects: this.list,\n      current: this.#currentProjectName,\n    });\n    Events.emit('projectsUpdated', {\n      projects: this.list,\n      current: this.#currentProjectName,\n    });\n  }\n\n  get list() {\n    return [...this.#projects];\n  }\n\n  get currentProjectName() {\n    return this.#currentProjectName;\n  }\n\n  setCurrentProject(projectName) {\n    if (this.#projects.some((p) => p.name === projectName)) {\n      this.#currentProjectName = projectName;\n      Events.emit('projectsUpdated', {\n        projects: this.list,\n        current: this.#currentProjectName,\n      });\n      Events.emit('tasksFilterChanged', this.#currentProjectName);\n      return true;\n    }\n    return false;\n  }\n\n  addProject(name) {\n    if (\n      name &&\n      name.trim() !== '' &&\n      !this.#projects.some((p) => p.name === name)\n    ) {\n      if (name === 'All') return false;\n      const newProject = new Project(name);\n      this.#projects.push(newProject);\n      this.#saveProjects();\n      return newProject;\n    }\n    return null;\n  }\n\n  deleteProject(projectName) {\n    debugLog('🗑 deleteProject called with:', projectName);\n    if (projectName === defaultInboxProjectName) return false;\n\n    const idx = this.#projects.findIndex((p) => p.name === projectName);\n    if (idx > -1) {\n      tasksManager.deleteTasksByCategory(projectName);\n\n      this.#projects.splice(idx, 1);\n\n      if (this.#currentProjectName === projectName) {\n        this.setCurrentProject(defaultInboxProjectName);\n      }\n\n      this.#saveProjects();\n      return true;\n    }\n    return false;\n  }\n}\n\nProject.prototype.setAsCurrent = function setAsCurrent() {\n  if (this._projectManager) {\n    this._projectManager.setCurrentProject(this.name);\n  } else {\n    debugError(\n      'ProjectManager not linked to Project instances for setAsCurrent'\n    );\n  }\n};\n\nconst projectsManager = new ProjectManager();\nexport default projectsManager;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { constructNow } from \"./constructNow.js\";\nimport { isSameDay } from \"./isSameDay.js\";\n\n/**\n * The {@link isToday} function options.\n */\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date, options) {\n  return isSameDay(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n  );\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * @param date - The date to check\n *\n * @returns The date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * const result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nexport function isPast(date) {\n  return +toDate(date) < Date.now();\n}\n\n// Fallback for modularized imports:\nexport default isPast;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import {\n  isToday,\n  isFuture,\n  isPast,\n  format,\n  parseISO,\n  isValid as isValidDate,\n} from 'date-fns';\nimport Events from './pubsub';\nimport tasksManager from './taskManager';\nimport projectsManager from './projectManager';\nimport { debugLog, debugWarn } from './logger';\n\nfunction qs(selector, scope = document) {\n  return scope.querySelector(selector);\n}\n\nclass Renderer {\n  #todoListElement;\n\n  #projectListElement;\n\n  #projectTitleElement;\n\n  #projectSelectInForm;\n\n  #editingId = null;\n\n  constructor() {\n    this.#todoListElement = qs('#todo-list');\n    this.#projectListElement = qs('#project-list');\n    this.#projectTitleElement = qs('#app h1.text-center');\n    this.#projectSelectInForm = qs('#todo-project');\n\n    Events.on('tasksUpdated', (tasks) => this.renderTasks(tasks));\n    Events.on('projectsUpdated', (data) => {\n      debugLog('⬅️ got projectsUpdated in Renderer', data);\n      this.#handleProjectsUpdate(data);\n    });\n    Events.on('tasksFilterChanged', () => this.renderTasks(tasksManager.list));\n\n    this.#handleProjectsUpdate({\n      projects: projectsManager.list,\n      current: projectsManager.currentProjectName,\n    });\n    this.renderTasks(tasksManager.list);\n  }\n\n  #handleProjectsUpdate(data) {\n    this.renderProjects(data.projects, data.current);\n    this.renderProjectOptionsInForm(\n      data.projects.filter(\n        (p) => !['All', 'Today', 'Upcoming', 'Overdue'].includes(p.name)\n      )\n    );\n    if (this.#projectTitleElement) {\n      this.#projectTitleElement.textContent = data.current || 'Todo List';\n    }\n  }\n\n  renderProjects(categories, activeCategoryName) {\n    if (!this.#projectListElement) return;\n    this.#projectListElement.innerHTML = '';\n    const SYSTEM_PROJECT_NAMES = [\n      'Inbox',\n      'Today',\n      'Upcoming',\n      'All',\n      'Overdue',\n    ];\n\n    const createProjectLi = (project, isAll = false) => {\n      const li = document.createElement('li');\n      li.classList.add('project-item');\n      li.dataset.projectName = project.name;\n\n      const span = document.createElement('span');\n      span.textContent = project.name;\n      span.classList.add('project-name');\n      span.addEventListener('click', () => {\n        projectsManager.setCurrentProject(project.name);\n      });\n      li.appendChild(span);\n\n      if (project.name === activeCategoryName) {\n        li.classList.add('active');\n      }\n\n      if (!isAll && !SYSTEM_PROJECT_NAMES.includes(project.name)) {\n        const btn = document.createElement('button');\n        btn.classList.add('delete-project-btn', 'action-icon-btn-sidebar');\n        btn.innerHTML =\n          '<i class=\"material-icons-outlined\" title=\"Delete project\">delete</i>';\n        btn.setAttribute('aria-label', `Delete project ${project.name}`);\n        btn.dataset.projectName = project.name;\n        li.appendChild(btn);\n      }\n      return li;\n    };\n\n    this.#projectListElement.appendChild(\n      createProjectLi({ name: 'All' }, true)\n    );\n    categories.forEach((p) => {\n      if (p.name === 'All') return;\n      this.#projectListElement.appendChild(createProjectLi(p));\n    });\n  }\n\n  renderProjectOptionsInForm(projects) {\n    if (!this.#projectSelectInForm) return;\n    this.#projectSelectInForm.innerHTML = '';\n    let inboxSelected = false;\n    projects.forEach((p) => {\n      const opt = document.createElement('option');\n      opt.value = p.name;\n      opt.textContent = p.name;\n      if (p.name === 'Inbox') {\n        opt.selected = true;\n        inboxSelected = true;\n      }\n      this.#projectSelectInForm.appendChild(opt);\n    });\n    if (!inboxSelected && this.#projectSelectInForm.options.length > 0) {\n      this.#projectSelectInForm.options[0].selected = true;\n    }\n  }\n\n  setEditingId(id) {\n    this.#editingId = id;\n    this.renderTasks(tasksManager.list);\n  }\n\n  getCurrentEditingId() {\n    return this.#editingId;\n  }\n\n  renderTasks(tasksToDisplay) {\n    if (!this.#todoListElement) return;\n    this.#todoListElement.innerHTML = '';\n\n    const { currentProjectName } = projectsManager;\n    let filteredTasks = [];\n\n    if (!currentProjectName || currentProjectName === 'All') {\n      filteredTasks = tasksToDisplay;\n    } else if (currentProjectName === 'Today') {\n      filteredTasks = tasksToDisplay.filter((task) => {\n        if (!task.due) return false;\n        try {\n          const d = parseISO(task.due);\n          return isValidDate(d) && isToday(d);\n        } catch (e) {\n          return false;\n        }\n      });\n    } else if (currentProjectName === 'Upcoming') {\n      filteredTasks = tasksToDisplay.filter((task) => {\n        if (!task.due) return false;\n        try {\n          const d = parseISO(task.due);\n          return isValidDate(d) && isFuture(d) && !isToday(d);\n        } catch (e) {\n          return false;\n        }\n      });\n    } else if (currentProjectName === 'Overdue') {\n      filteredTasks = tasksToDisplay.filter((task) => {\n        if (!task.due || task.done) return false;\n        try {\n          const d = parseISO(task.due);\n          return isValidDate(d) && isPast(d) && !isToday(d);\n        } catch (e) {\n          return false;\n        }\n      });\n    } else {\n      filteredTasks = tasksToDisplay.filter(\n        (task) => task.category === currentProjectName\n      );\n    }\n\n    filteredTasks.forEach((task) => {\n      const li = document.createElement('li');\n      li.dataset.id = task.id;\n      if (task.done) li.classList.add('done');\n\n      const leftGroup = document.createElement('div');\n      leftGroup.classList.add('task-group-left');\n\n      const prioritySpan = document.createElement('span');\n      prioritySpan.classList.add('todo-priority');\n\n      const iconName = 'flag';\n      let priorityTitle = 'No priority';\n\n      if (task.priority && task.priority.trim() !== '') {\n        const lowerCasePriority = task.priority.toLowerCase();\n        prioritySpan.classList.add(lowerCasePriority);\n        priorityTitle = `${task.priority} Priority`;\n      }\n\n      prioritySpan.innerHTML = `<i class=\"material-icons-outlined\" title=\"${priorityTitle}\">${iconName}</i>`;\n      leftGroup.appendChild(prioritySpan);\n\n      const toggleBtn = document.createElement('button');\n      toggleBtn.type = 'button';\n      toggleBtn.classList.add('toggle', 'action-icon-btn');\n      toggleBtn.dataset.id = task.id;\n      const toggleIconName = task.done ? 'replay' : 'check_circle_outline';\n      const toggleIconTitle = task.done ? 'Mark as not done' : 'Mark as done';\n      toggleBtn.innerHTML = `<i class=\"material-icons-outlined\" title=\"${toggleIconTitle}\">${toggleIconName}</i>`;\n      leftGroup.appendChild(toggleBtn);\n\n      if (task.id === this.#editingId) {\n        const editForm = document.createElement('form');\n        editForm.classList.add('edit-task-form');\n        editForm.addEventListener('submit', (e) => e.preventDefault());\n\n        const textInput = document.createElement('input');\n        textInput.type = 'text';\n        textInput.classList.add('edit-input', 'edit-task-text');\n        textInput.value = task.text;\n        editForm.appendChild(textInput);\n\n        const dateInput = document.createElement('input');\n        dateInput.type = 'date';\n        dateInput.classList.add('edit-input', 'edit-task-due');\n        dateInput.value = task.due || '';\n        editForm.appendChild(dateInput);\n\n        const categoryEditSelect = document.createElement('select');\n        categoryEditSelect.classList.add('edit-input', 'edit-task-category');\n        const assignableCategories = projectsManager.list.filter(\n          (p) => !['All', 'Today', 'Upcoming', 'Overdue'].includes(p.name)\n        );\n        assignableCategories.forEach((cat) => {\n          const option = document.createElement('option');\n          option.value = cat.name;\n          option.textContent = cat.name;\n          if (cat.name === task.category) option.selected = true;\n          categoryEditSelect.appendChild(option);\n        });\n        editForm.appendChild(categoryEditSelect);\n\n        const priorityEditSelect = document.createElement('select');\n        priorityEditSelect.classList.add('edit-input', 'edit-task-priority');\n        const priorityOptions = [\n          { value: '', text: 'None' },\n          { value: 'Low', text: 'Low' },\n          { value: 'Medium', text: 'Medium' },\n          { value: 'High', text: 'High' },\n        ];\n        priorityOptions.forEach((opt) => {\n          const option = document.createElement('option');\n          option.value = opt.value;\n          option.textContent = opt.text;\n          if (opt.value === (task.priority || '')) option.selected = true;\n          priorityEditSelect.appendChild(option);\n        });\n        editForm.appendChild(priorityEditSelect);\n\n        const editFormActions = document.createElement('div');\n        editFormActions.classList.add('edit-form-actions');\n        const saveBtn = document.createElement('button');\n        saveBtn.type = 'submit';\n        saveBtn.classList.add('save-edit-btn');\n        saveBtn.dataset.id = task.id;\n        saveBtn.innerHTML = '<i class=\"material-icons-outlined\">save</i> Save';\n        editFormActions.appendChild(saveBtn);\n        const cancelBtn = document.createElement('button');\n        cancelBtn.type = 'button';\n        cancelBtn.classList.add('cancel-edit-btn');\n        cancelBtn.dataset.id = task.id;\n        cancelBtn.innerHTML = 'Cancel';\n        editFormActions.appendChild(cancelBtn);\n        editForm.appendChild(editFormActions);\n        leftGroup.appendChild(editForm);\n      } else {\n        const textSpan = document.createElement('span');\n        textSpan.classList.add('todo-text');\n        textSpan.textContent = task.text;\n        leftGroup.appendChild(textSpan);\n      }\n      li.appendChild(leftGroup);\n\n      const rightGroup = document.createElement('div');\n      rightGroup.classList.add('task-group-right');\n\n      if (task.id !== this.#editingId && task.due) {\n        const dueSpan = document.createElement('span');\n        dueSpan.classList.add('todo-due');\n        try {\n          const dateObject = parseISO(task.due);\n          if (isValidDate(dateObject)) {\n            dueSpan.innerHTML = `<i class=\"material-icons-outlined\" title=\"Due date\">event</i> ${format(\n              dateObject,\n              'MMM d'\n            )}`;\n          } else {\n            dueSpan.innerHTML = `<i class=\"material-icons-outlined\" title=\"Due date\">event</i> ${task.due}`;\n          }\n        } catch (e) {\n          debugWarn('Error parsing due date:', task.due, e);\n          dueSpan.innerHTML = `<i class=\"material-icons-outlined\" title=\"Due date\">event</i> ${task.due}`;\n        }\n        rightGroup.appendChild(dueSpan);\n      }\n\n      const editBtn = document.createElement('button');\n      editBtn.type = 'button';\n      editBtn.classList.add('edit-btn', 'action-icon-btn');\n      editBtn.dataset.id = task.id;\n      editBtn.setAttribute('aria-label', 'Edit task');\n      editBtn.innerHTML =\n        '<i class=\"material-icons-outlined\" title=\"Edit task\">edit</i>';\n      rightGroup.appendChild(editBtn);\n\n      const noteBtn = document.createElement('button');\n      noteBtn.type = 'button';\n      noteBtn.classList.add('note-btn', 'action-icon-btn');\n      noteBtn.dataset.id = task.id;\n      noteBtn.setAttribute('aria-label', 'Notes');\n      if (task.note && task.note.trim() !== '') {\n        noteBtn.classList.add('has-content');\n        noteBtn.innerHTML =\n          '<i class=\"material-icons-outlined\" title=\"View/Edit Notes\">description</i>';\n      } else {\n        noteBtn.innerHTML =\n          '<i class=\"material-icons-outlined\" title=\"Add Notes\">description</i>';\n      }\n      rightGroup.appendChild(noteBtn);\n\n      const listBtn = document.createElement('button');\n      listBtn.type = 'button';\n      listBtn.classList.add('list-btn', 'action-icon-btn');\n      listBtn.dataset.id = task.id;\n      listBtn.setAttribute('aria-label', 'Checklist');\n      if (task.subtasks && task.subtasks.length > 0) {\n        listBtn.classList.add('has-content');\n        const doneCount = task.subtasks.filter((s) => s.done).length;\n        listBtn.innerHTML = `<i class=\"material-icons-outlined\" title=\"View/Edit Checklist\">checklist</i> <span class=\"subtask-count\">${doneCount}/${task.subtasks.length}</span>`;\n      } else {\n        listBtn.innerHTML = `<i class=\"material-icons-outlined\" title=\"Add Checklist Items\">playlist_add</i>`;\n      }\n      rightGroup.appendChild(listBtn);\n\n      const removeBtn = document.createElement('button');\n      removeBtn.type = 'button';\n      removeBtn.classList.add('remove', 'action-icon-btn');\n      removeBtn.dataset.id = task.id;\n      removeBtn.innerHTML =\n        '<i class=\"material-icons-outlined\" title=\"Remove task\">delete</i>';\n      rightGroup.appendChild(removeBtn);\n      li.appendChild(rightGroup);\n\n      const noteArea = document.createElement('div');\n      noteArea.classList.add('note-area', 'hidden');\n      const textArea = document.createElement('textarea');\n      textArea.classList.add('note-text');\n      textArea.value = task.note || '';\n      textArea.rows = 3;\n      textArea.placeholder = 'Notes';\n      noteArea.appendChild(textArea);\n      const noteAreaActions = document.createElement('div');\n      noteAreaActions.classList.add('note-area-actions');\n      const saveNoteBtn = document.createElement('button');\n      saveNoteBtn.classList.add('save-note-btn');\n      saveNoteBtn.dataset.id = task.id;\n      saveNoteBtn.innerHTML =\n        '<i class=\"material-icons-outlined\">save</i> Save';\n      saveNoteBtn.setAttribute('aria-label', 'Save note');\n      noteAreaActions.appendChild(saveNoteBtn);\n      const cancelNoteBtn = document.createElement('button');\n      cancelNoteBtn.type = 'button';\n      cancelNoteBtn.classList.add('cancel-note-btn');\n      cancelNoteBtn.textContent = 'Cancel';\n      noteAreaActions.appendChild(cancelNoteBtn);\n      noteArea.appendChild(noteAreaActions);\n      li.appendChild(noteArea);\n\n      const listArea = document.createElement('div');\n      listArea.classList.add('list-area', 'hidden');\n      const subForm = document.createElement('form');\n      subForm.classList.add('sub-form');\n      subForm.dataset.id = task.id;\n      const subInput = document.createElement('input');\n      subInput.classList.add('sub-input');\n      subInput.type = 'text';\n      subInput.placeholder = 'New subtask';\n      subInput.required = true;\n      subForm.appendChild(subInput);\n      const subFormActions = document.createElement('div');\n      subFormActions.classList.add('sub-form-actions');\n      const subAddBtn = document.createElement('button');\n      subAddBtn.type = 'submit';\n      subAddBtn.innerHTML = '<i class=\"material-icons-outlined\">add</i> Add';\n      subFormActions.appendChild(subAddBtn);\n      const cancelSubtaskFormBtn = document.createElement('button');\n      cancelSubtaskFormBtn.type = 'button';\n      cancelSubtaskFormBtn.classList.add('cancel-subtask-form-btn');\n      cancelSubtaskFormBtn.textContent = 'Cancel';\n      subFormActions.appendChild(cancelSubtaskFormBtn);\n      subForm.appendChild(subFormActions);\n      listArea.appendChild(subForm);\n      const subUl = document.createElement('ul');\n      subUl.classList.add('sub-list');\n      if (Array.isArray(task.subtasks)) {\n        task.subtasks.forEach((subItem) => {\n          const subLi = document.createElement('li');\n          subLi.classList.toggle('done', subItem.done);\n          subLi.dataset.subId = subItem.id;\n          const subChk = document.createElement('button');\n          subChk.type = 'button';\n          subChk.classList.add('sub-toggle', 'action-icon-btn');\n          subChk.dataset.id = task.id;\n          subChk.dataset.subId = subItem.id;\n          const subToggleIconName = subItem.done\n            ? 'check_box'\n            : 'check_box_outline_blank';\n          const subToggleIconTitle = subItem.done\n            ? 'Mark as not done'\n            : 'Mark as done';\n          subChk.innerHTML = `<i class=\"material-icons-outlined\" title=\"${subToggleIconTitle}\">${subToggleIconName}</i>`;\n          subLi.appendChild(subChk);\n\n          const subSpan = document.createElement('span');\n          subSpan.classList.add('sub-text');\n          subSpan.textContent = subItem.text;\n          subLi.appendChild(subSpan);\n\n          const subDel = document.createElement('button');\n          subDel.type = 'button';\n          subDel.classList.add('sub-remove', 'action-icon-btn');\n          subDel.dataset.id = task.id;\n          subDel.dataset.subId = subItem.id;\n          subDel.innerHTML = `<i class=\"material-icons-outlined\" title=\"Remove subtask\">delete</i>`;\n          subLi.appendChild(subDel);\n\n          subUl.appendChild(subLi);\n        });\n      }\n      listArea.appendChild(subUl);\n      li.appendChild(listArea);\n\n      this.#todoListElement.appendChild(li);\n    });\n  }\n}\n\nconst appRenderer = new Renderer();\nexport default appRenderer;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * @param date - The date to check\n *\n * @returns The date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nexport function isFuture(date) {\n  return +toDate(date) > Date.now();\n}\n\n// Fallback for modularized imports:\nexport default isFuture;\n","import { debugLog } from './logger';\n\nfunction qs(selector, scope = document) {\n  if (!scope) return null;\n  return scope.querySelector(selector);\n}\n\nconst dialogElement = qs('#confirmation-dialog');\nlet messageElement = null;\nlet confirmButton = null;\nlet cancelButton = null;\nlet currentConfirmCallback = null;\n\nfunction closeDialog() {\n  if (dialogElement) {\n    dialogElement.close();\n  }\n  currentConfirmCallback = null;\n}\n\nfunction handleConfirm() {\n  debugLog('✅ handleConfirm fired; callback=', currentConfirmCallback);\n  if (typeof currentConfirmCallback === 'function') {\n    currentConfirmCallback();\n  }\n  closeDialog();\n}\n\nif (dialogElement) {\n  messageElement = qs('#confirmation-message', dialogElement);\n  confirmButton = qs('#confirm-yes-btn', dialogElement);\n  cancelButton = qs('#confirm-no-btn', dialogElement);\n\n  confirmButton.addEventListener('click', handleConfirm);\n  cancelButton.addEventListener('click', closeDialog);\n} else {\n  debugLog(\n    'Confirmation dialog element (#confirmation-dialog) not found in the DOM. Dialog will not function.'\n  );\n}\n\nconst confirmationDialog = {\n  open(message, onConfirm) {\n    if (dialogElement && messageElement) {\n      messageElement.textContent = message;\n      currentConfirmCallback = onConfirm;\n      dialogElement.showModal();\n    } else {\n      debugLog(\n        'Cannot open confirmation dialog: essential elements are missing. Check initialization logs.'\n      );\n    }\n  },\n};\n\nexport default confirmationDialog;\n","import './styles.css';\nimport Events from './pubsub';\nimport tasksManager from './taskManager';\nimport projectsManager from './projectManager';\nimport appRenderer from './renderer';\nimport confirmationDialog from './confirmationDialog';\nimport { debugLog, debugWarn, debugError } from './logger';\n\nfunction qs(selector) {\n  return document.querySelector(selector);\n}\n\nconst mainTaskForm = qs('#todo-form');\nconst taskInput = qs('#todo-input');\nconst taskDueInput = qs('#todo-due');\nconst taskProjectSelect = qs('#todo-project');\nconst taskPrioritySelect = qs('#todo-priority');\n\nconst projectForm = qs('#proj-form');\nconst projectInput = qs('#proj-input');\nconst projectListElement = qs('#project-list');\n\nconst todoListElement = qs('#todo-list');\n\nconst sortByDueDateBtn = qs('#sort-by-due-date-btn');\nconst sortByPriorityBtn = qs('#sort-by-priority-btn');\nconst sortByNameBtn = qs('#sort-by-name-btn');\n\nconst allSortButtons = [\n  { button: sortByNameBtn, field: 'text', name: 'Name' },\n  { button: sortByDueDateBtn, field: 'due', name: 'Due Date' },\n  { button: sortByPriorityBtn, field: 'priority', name: 'Priority' },\n];\n\nfunction autoSelectProjectInForm(projectName) {\n  if (!taskProjectSelect) return;\n  const FILTER_VIEWS = ['All', 'Today', 'Upcoming', 'Overdue'];\n  let target = projectName;\n  if (FILTER_VIEWS.includes(projectName) && projectName !== 'Inbox') {\n    target = 'Inbox';\n  }\n  const hasOption = Array.from(taskProjectSelect.options).some(\n    (opt) => opt.value === target\n  );\n  if (!hasOption) target = 'Inbox';\n  taskProjectSelect.value = target;\n}\n\nEvents.on('projectsUpdated', ({ current }) => {\n  autoSelectProjectInForm(current);\n});\n\nEvents.on('tasksFilterChanged', (projectName) => {\n  autoSelectProjectInForm(projectName);\n});\n\nfunction updateSortButtonActiveStates() {\n  const currentCriteria = tasksManager.getCurrentSortCriteria();\n\n  allSortButtons.forEach(({ button, field }) => {\n    if (button) {\n      button.classList.remove('active-sort');\n      const existingArrow = button.querySelector('.sort-arrow');\n      if (existingArrow) {\n        existingArrow.remove();\n      }\n\n      if (currentCriteria.field === field) {\n        button.classList.add('active-sort');\n        const arrow = document.createElement('span');\n        arrow.classList.add('sort-arrow');\n        arrow.innerHTML =\n          currentCriteria.direction === 'asc' ? ' &uarr;' : ' &darr;';\n        button.appendChild(arrow);\n      }\n    }\n  });\n}\n\nif (sortByDueDateBtn) {\n  sortByDueDateBtn.addEventListener('click', () => {\n    tasksManager.setSortCriteria('due');\n  });\n}\n\nif (sortByPriorityBtn) {\n  sortByPriorityBtn.addEventListener('click', () => {\n    tasksManager.setSortCriteria('priority');\n  });\n}\n\nif (sortByNameBtn) {\n  sortByNameBtn.addEventListener('click', () => {\n    tasksManager.setSortCriteria('text');\n  });\n}\n\nif (projectListElement) {\n  projectListElement.addEventListener('click', (e) => {\n    const deleteProjectButton = e.target.closest('button.delete-project-btn');\n    if (deleteProjectButton) {\n      const { projectName } = deleteProjectButton.dataset;\n      confirmationDialog.open(\n        `Are you sure you want to delete project \"${projectName}\"? ` +\n          `This will permanently remove the project and all its tasks.`,\n        () => {\n          projectsManager.deleteProject(projectName);\n        }\n      );\n    }\n  });\n}\n\nif (projectForm) {\n  projectForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const projectName = projectInput.value.trim();\n    if (projectName) {\n      const added = projectsManager.addProject(projectName);\n      if (added) {\n        projectInput.value = '';\n      } else {\n        debugWarn(`Project \"${projectName}\" already exists or is invalid.`);\n      }\n    }\n  });\n}\n\nif (mainTaskForm) {\n  mainTaskForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const text = taskInput.value.trim();\n    const due = taskDueInput.value || null;\n    const category = taskProjectSelect.value;\n\n    const priorityValue = taskPrioritySelect ? taskPrioritySelect.value : '';\n    const priorityForNewTask = priorityValue === '' ? null : priorityValue;\n\n    if (text) {\n      tasksManager.createTask(text, due, category, priorityForNewTask);\n      taskInput.value = '';\n      taskDueInput.value = '';\n      if (taskPrioritySelect) taskPrioritySelect.value = '';\n      taskInput.focus();\n    }\n  });\n}\n\nif (todoListElement) {\n  todoListElement.addEventListener('click', (e) => {\n    const { target } = e;\n\n    const editButton = target.closest('button.edit-btn');\n    if (editButton) {\n      const todoId = Number(editButton.dataset.id);\n      const currentEditingId = appRenderer.getCurrentEditingId();\n      appRenderer.setEditingId(currentEditingId === todoId ? null : todoId);\n      return;\n    }\n\n    const cancelEditButton = target.closest('button.cancel-edit-btn');\n    if (cancelEditButton) {\n      appRenderer.setEditingId(null);\n      return;\n    }\n\n    if (target.matches('button.cancel-note-btn')) {\n      const taskLi = target.closest('li[data-id]');\n      if (taskLi) {\n        const noteArea = taskLi.querySelector('.note-area');\n        if (noteArea) {\n          noteArea.classList.add('hidden');\n          const textArea = noteArea.querySelector('textarea.note-text');\n          const taskId = Number(taskLi.dataset.id);\n          const task = tasksManager.list.find((t) => t.id === taskId);\n          if (textArea && task) textArea.value = task.note || '';\n        }\n      }\n      return;\n    }\n\n    if (target.matches('button.cancel-subtask-form-btn')) {\n      const taskLi = target.closest('li[data-id]');\n      if (taskLi) {\n        const listArea = taskLi.querySelector('.list-area');\n        if (listArea) {\n          listArea.classList.add('hidden');\n          const subInput = listArea.querySelector('input.sub-input');\n          if (subInput) subInput.value = '';\n        }\n      }\n      return;\n    }\n\n    const saveEditButton = target.closest('button.save-edit-btn');\n    if (saveEditButton) {\n      const todoId = Number(saveEditButton.dataset.id);\n      const taskLi = saveEditButton.closest('li[data-id]');\n      if (taskLi) {\n        const textInput = taskLi.querySelector('input.edit-task-text');\n        const dateInput = taskLi.querySelector('input.edit-task-due');\n        const priorityInput = taskLi.querySelector('select.edit-task-priority');\n        const categoryEditSelectInput = taskLi.querySelector(\n          'select.edit-task-category'\n        );\n\n        const newText = textInput ? textInput.value.trim() : '';\n        const newDueDate = dateInput ? dateInput.value || null : null;\n        const priorityValueFromEdit = priorityInput ? priorityInput.value : '';\n        const newPriority =\n          priorityValueFromEdit === '' ? null : priorityValueFromEdit;\n        const newCategory = categoryEditSelectInput\n          ? categoryEditSelectInput.value\n          : null;\n        const updatedProperties = {};\n\n        if (textInput && newText) {\n          updatedProperties.text = newText;\n        }\n        if (dateInput) {\n          updatedProperties.due = newDueDate;\n        }\n        if (priorityInput) {\n          updatedProperties.priority = newPriority;\n        }\n        if (categoryEditSelectInput && typeof newCategory === 'string') {\n          updatedProperties.category = newCategory;\n        }\n        if (newText) {\n          tasksManager.updateTask(todoId, {\n            text: newText,\n            due: newDueDate || null,\n            priority: newPriority,\n          });\n        }\n        if (Object.keys(updatedProperties).length > 0) {\n          tasksManager.updateTask(todoId, updatedProperties);\n        }\n      }\n      appRenderer.setEditingId(null);\n      return;\n    }\n\n    const toggleButton = target.closest('.toggle');\n    if (toggleButton) {\n      const taskId = toggleButton.dataset.id;\n      if (!taskId) {\n        debugError(\n          'Toggle button clicked, but data-id is missing!',\n          toggleButton\n        );\n        return;\n      }\n      try {\n        const numericTaskId = parseInt(taskId, 10);\n        const task = tasksManager.findTaskById(numericTaskId);\n        if (!task) {\n          debugError(`Task with ID ${numericTaskId} not found for toggle.`);\n          return;\n        }\n        tasksManager.updateTask(numericTaskId, { done: !task.done });\n      } catch (t) {\n        debugError('Error processing task toggle:', e, 'Task ID:', taskId);\n      }\n      return;\n    }\n\n    const removeButton = target.closest('button.remove');\n    if (removeButton) {\n      const taskId = Number(removeButton.dataset.id);\n      confirmationDialog.open('Delete task?', () => {\n        tasksManager.deleteTask(taskId);\n      });\n      return;\n    }\n\n    const noteButton = target.closest('button.note-btn');\n    if (noteButton) {\n      const taskLi = noteButton.closest('li[data-id]');\n      if (taskLi) {\n        taskLi.querySelector('.note-area').classList.toggle('hidden');\n      }\n      return;\n    }\n\n    const saveNoteButton = target.closest('button.save-note-btn');\n    if (saveNoteButton) {\n      const taskId = saveNoteButton.dataset.id;\n      const listItem = saveNoteButton.closest('li');\n      if (!listItem) {\n        debugError('Could not find parent <li> for save note button.');\n        return;\n      }\n      const noteTextArea = listItem.querySelector('.note-area .note-text');\n      if (!taskId) {\n        debugWarn('Task ID is missing. Unable to save note.');\n        return;\n      }\n      if (!noteTextArea) {\n        debugError(\n          'Note textarea not found for task ID:',\n          taskId,\n          'within LI:',\n          listItem\n        );\n        return;\n      }\n      try {\n        const noteText = noteTextArea.value;\n        tasksManager.updateTask(parseInt(taskId, 10), { note: noteText });\n      } catch (t) {\n        debugError('Error processing save note:', e, 'Task ID:', taskId);\n      }\n      return;\n    }\n\n    const listButton = target.closest('button.list-btn');\n    if (listButton) {\n      const taskLi = listButton.closest('li[data-id]');\n      if (taskLi) {\n        taskLi.querySelector('.list-area').classList.toggle('hidden');\n      }\n      return;\n    }\n\n    const subToggleBtn = e.target.closest('.sub-toggle');\n    if (subToggleBtn) {\n      const taskId = subToggleBtn.dataset.id;\n      const subtaskId = subToggleBtn.dataset.subId;\n      debugLog(\n        'Subtask toggle clicked. TaskID:',\n        taskId,\n        'SubtaskID:',\n        subtaskId\n      );\n\n      if (taskId && subtaskId) {\n        try {\n          tasksManager.toggleSubtask(parseInt(taskId, 10), subtaskId);\n          debugLog('tasksManager.toggleSubtask called for', subtaskId);\n        } catch (err) {\n          debugError('Error toggling subtask:', err);\n        }\n      } else {\n        debugError(\n          'Missing taskId or subtaskId for subtask toggle.',\n          subToggleBtn\n        );\n      }\n      return;\n    }\n\n    const subRemoveBtn = e.target.closest('.sub-remove');\n    if (subRemoveBtn) {\n      const taskId = subRemoveBtn.dataset.id;\n      const subtaskId = subRemoveBtn.dataset.subId;\n      debugLog(\n        'Subtask remove clicked. TaskID:',\n        taskId,\n        'SubtaskID:',\n        subtaskId\n      );\n\n      if (taskId && subtaskId) {\n        try {\n          tasksManager.deleteSubtask(parseInt(taskId, 10), subtaskId);\n          debugLog('tasksManager.deleteSubtask called for', subtaskId);\n        } catch (err) {\n          debugError('Error deleting subtask:', err);\n        }\n      } else {\n        debugError(\n          'Missing taskId or subtaskId for subtask removal.',\n          subRemoveBtn\n        );\n      }\n    }\n  });\n\n  todoListElement.addEventListener('submit', (e) => {\n    if (!e.target.matches('.sub-form')) return;\n    e.preventDefault();\n    debugLog('Sub-form submitted. Target:', e.target);\n\n    const form = e.target;\n    const taskId = form.dataset.id;\n    const subtaskInput = form.querySelector('.sub-input');\n\n    debugLog('Task ID for subtask:', taskId, 'Input element:', subtaskInput);\n\n    if (!taskId) {\n      debugError('Task ID is missing. Cannot add subtask.');\n      return;\n    }\n    if (!subtaskInput) {\n      debugError(\n        'Subtask input not found for task ID:',\n        taskId,\n        'within form:',\n        form\n      );\n      return;\n    }\n    try {\n      const subtaskText = subtaskInput.value.trim();\n      debugLog('Subtask text to add:', subtaskText);\n\n      if (subtaskText) {\n        debugLog(\n          'Attempting to call tasksManager.addSubtask with taskId:',\n          parseInt(taskId, 10),\n          'and text:',\n          subtaskText\n        );\n        tasksManager.addSubtask(parseInt(taskId, 10), subtaskText);\n        debugLog('tasksManager.addSubtask called.');\n        subtaskInput.value = '';\n      } else {\n        debugLog('Subtask text is empty. Not adding.');\n      }\n    } catch (t) {\n      debugError(\n        'Error processing add subtask in index.js:',\n        t,\n        'Task ID:',\n        taskId\n      );\n    }\n  });\n}\n\nEvents.on('sortCriteriaChanged', updateSortButtonActiveStates);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  updateSortButtonActiveStates();\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0,\n\t869: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebpack_starter\"] = self[\"webpackChunkwebpack_starter\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [869], () => (__webpack_require__(579)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","PubSub","_classCallCheck","_classPrivateFieldInitSpec","_events","key","value","eventName","fn","_classPrivateFieldGet","this","push","i","length","splice","data","forEach","get","millisecondsInWeek","Math","pow","millisecondsInHour","constructFromSymbol","Symbol","for","constructFrom","date","Date","constructor","toDate","argument","context","parseISO","options","invalidDate","in","NaN","additionalDigits","dateStrings","dateString","array","split","patterns","dateTimeDelimiter","timeString","test","timeZoneDelimiter","substr","token","timezone","exec","time","replace","splitDateString","parseYearResult","regex","RegExp","captures","match","year","restDateString","parseInt","century","slice","parseYear","dateRegex","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseDate","isNaN","timestamp","offset","timeRegex","hours","parseTimeUnit","minutes","seconds","validateTime","parseTime","tmpDate","result","setFullYear","getUTCFullYear","getUTCMonth","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","sign","_hours","validateTimezone","parseTimezone","parseFloat","isValid","Object","prototype","toString","call","debugLog","message","obj","arguments","undefined","console","log","debugWarn","warn","debugError","error","TASKS_STORAGE_KEY","SORT_CRITERIA_KEY","_tasks","WeakMap","_nextId","_currentSortCriteria","_TaskManager_brand","WeakSet","_loadSortCriteria","storedCriteria","localStorage","getItem","_classPrivateFieldSet","JSON","parse","e","field","direction","_saveSortCriteria","setItem","stringify","_loadTasks","storedTasks","reduce","task","id","Events","emit","list","_saveTasks","TaskManager","_assertClassBrand","text","due","category","priority","note","subtasks","done","newTask","createdAt","toISOString","_objectSpread","sortedTasks","_toConsumableArray","_classPrivateFieldGet2","priorityOrder","High","Medium","Low","null","sort","a","b","valA","valB","aIsNull","bIsNull","dateA","dateB","aIsValid","isValidDate","bIsValid","dateLeft","dateRight","compareAsc","compareDesc","priorityA","priorityB","String","toLowerCase","find","updates","taskIndex","findIndex","concat","taskId","subtaskText","findTaskById","Array","isArray","newSubtask","now","random","substring","subtaskId","subtask","st","filter","categoryName","before","t","idx","_createClass","Project","name","PROJECTS_STORAGE_KEY","DEFAULT_PROJECTS","defaultInboxProjectName","_projects","_currentProjectName","_ProjectManager_brand","ProjectManager","_loadProjects","_projectManager","projectName","some","p","projects","current","trim","newProject","_saveProjects","tasksManager","deleteTasksByCategory","setCurrentProject","_this","storedProjects","parsedProjectNames","uniqueProjectNames","includes","map","projectNames","setAsCurrent","normalizeDates","dates","normalize","bind","startOfDay","_date","isToday","laterDate","earlierDate","dateLeft_","dateRight_","isSameDay","constructNow","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","defaultWidth","formats","formatLong","full","long","medium","short","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","matchedString","parsePatterns","defaultParseWidth","object","hasOwnProperty","findKey","valueCallback","rest","enUS","code","formatDistance","count","tokenValue","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getDayOfYear","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","startOfYear","startOfWeek","locale","getDay","setDate","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","I","isoWeek","D","E","localDayOfWeek","c","isoDayOfWeek","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","delimiter","absOffset","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","input","matched","qs","selector","document","querySelector","_todoListElement","_projectListElement","_projectTitleElement","_projectSelectInForm","_editingId","_Renderer_brand","Renderer","on","tasks","renderTasks","_handleProjectsUpdate","projectsManager","currentProjectName","categories","activeCategoryName","_this2","innerHTML","SYSTEM_PROJECT_NAMES","createProjectLi","project","isAll","li","createElement","classList","add","dataset","span","textContent","addEventListener","appendChild","btn","setAttribute","_this3","inboxSelected","opt","selected","tasksToDisplay","_this4","leftGroup","prioritySpan","priorityTitle","lowerCasePriority","toggleBtn","type","toggleIconName","toggleIconTitle","editForm","preventDefault","textInput","dateInput","categoryEditSelect","cat","option","priorityEditSelect","editFormActions","saveBtn","cancelBtn","textSpan","rightGroup","dueSpan","dateObject","formatStr","originalDate","RangeError","parts","firstCharacter","longFormatter","join","isToken","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","format","_message","subject","warnOrThrowProtectedError","formatter","editBtn","noteBtn","listBtn","doneCount","removeBtn","noteArea","textArea","rows","placeholder","noteAreaActions","saveNoteBtn","cancelNoteBtn","listArea","subForm","subInput","required","subFormActions","subAddBtn","cancelSubtaskFormBtn","subUl","subItem","subLi","toggle","subId","subChk","subToggleIconName","subToggleIconTitle","subSpan","subDel","renderProjects","renderProjectOptionsInForm","scope","dialogElement","messageElement","confirmButton","cancelButton","currentConfirmCallback","closeDialog","close","open","onConfirm","showModal","mainTaskForm","taskInput","taskDueInput","taskProjectSelect","taskPrioritySelect","projectForm","projectInput","projectListElement","todoListElement","sortByDueDateBtn","sortByPriorityBtn","sortByNameBtn","allSortButtons","button","autoSelectProjectInForm","target","from","updateSortButtonActiveStates","currentCriteria","getCurrentSortCriteria","_ref2","remove","existingArrow","arrow","_ref","setSortCriteria","deleteProjectButton","closest","confirmationDialog","deleteProject","addProject","priorityValue","priorityForNewTask","createTask","focus","editButton","todoId","currentEditingId","appRenderer","getCurrentEditingId","setEditingId","matches","taskLi","saveEditButton","priorityInput","categoryEditSelectInput","newText","newDueDate","priorityValueFromEdit","newPriority","newCategory","updatedProperties","updateTask","keys","toggleButton","numericTaskId","removeButton","deleteTask","noteButton","saveNoteButton","listItem","noteTextArea","noteText","listButton","subToggleBtn","toggleSubtask","err","subRemoveBtn","deleteSubtask","form","subtaskInput","addSubtask","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","chunkIds","notFulfilled","Infinity","fulfilled","j","every","r","o","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}